This tutorial is designed to teach you the most basic task in cvu -- loading
a visualization for your own custom data.


The first thing you should do is run the program (./run) with no arguments.
If your import statements all resolve correctly, it will display the GUI with
some sample data.  This data is an epoch of synchronization likelihood MEG data 
collected from a healthy subject.  The parcellation is a custom-built
parcellation with 69 ROIs per hemisphere of roughly equal size that are 
subdivisions of freesurfer's aparc parcellation.  This is an excellent time to
push random buttons and see how you can interact with the visualization.




There are two things that you need to do in order to use cvu for visualization
of your particular data.  First, you will need to create a matrix with your 
data.  The rows and columns of the matrix represent ROIs in the brain.
The entries of this matrix are numbers, representing connectivity values 
between the two regions.  For instance, they might be floating point numbers
representing the pairwise correlation between fMRI signal extracted from two 
ROIs.  Or, integers indicating the number of diffsion-weighted tracts between
two ROIs.  Or, coherence between two source-space ROIs.  Or any other metric of
connectivity you can think of, with one caveat: directed connectivity (such as
granger causality) is not handled.  Make the matrix symmetric.

Cvu does not do much analysis for you, because it is a visualization rather than
analysis tool.  The only analysis cvu does do is some network analysis, 
operating on abstract graphs of any modality or type of data.

The second thing you need to do is create freesurfer annotation files (one for
each hemisphere) containing labels of the regions used in the matrix.  This annotation should generally be registered to 
the fsaverage5 template surface, because as cvu is primarily a tool to visualize
connectivity.  Unless this connectivity is structural (there are some problems
with the integration of tractography in cvu at the moment and many tools for 
this exist), there is little benefit to using the subject's individual 
morphology.  However, if you want to use the subject's brain surface, and not
fsaverage5, then you will need an annotation registered to the subject's brain. 
This will require a full freesurfer reconstruction.
Note that if your matrix includes subcortical structures, they should not be 
part of the annotation.

If the annotation is in the fsaverage5 space, copy the annotation files to 
$cvu_dir/cvu/fsavg5/label.  Otherwise, copy them to the label directory from
your subject's reconstruction.


When you have done these things, you will need to load the parcellation, and
then the matrix.  To load the parcellation you will need the following things:

	parcellation : The name of your annotation file.  For instance, if
		your annotations are called "lh.my_parcellation.annot" and
		"rh.my_parcellation.annot", just enter "my_parcellation" here.
	label display order : The ordering file for your parcellation.  This is a
		text file containing ROI names.  There should be one name per line.
		This is the order of the rows and columns in the adjacenc matrix.

If your annotation is not registered to fsaverage5, you will also have to
specify the subject name and SUBJECTS_DIR here.  SUBJECTS_DIR is the directory 
immediately above the subject's reconstruction directory.


Loading the adjacency matrix is then considerably simpler.  The adjmat can be a
numpy matrix, matlab matrix, or a text file with numbers.  If it is a matlab
format, you will need to indicate the field name where the adjacency data is.
Leave the fields called "label order", "max edges", and "ignore_deletes" empty
for now.


If everything went well, you should have loaded some data!
